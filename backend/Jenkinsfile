// Déclaration du pipeline Jenkins
pipeline {
    // Exécute le pipeline sur n'importe quel agent
    agent any
    // Déclarer les variables d'environnement globales
    environment {
        DOCKER_USERNAME     = "massire1"                        // votre username Docker Hub
        IMAGE_VERSION       = "1.${BUILD_NUMBER}"                // version dynamique de l’image
        DOCKER_IMAGE        = "${DOCKER_USERNAME}/tp-app:${IMAGE_VERSION}" // nom de l’image docker
        DOCKER_CONTAINER    = "test-ci-cd-${BUILD_NUMBER}"               // nom du conteneur
        DOCKER_CREDENTIALS  = credentials("my-docker-cred-id") // identifiants Docker Hub
    }
    // Les étapes du pipeline
    stages {
        // Étape 1 : Récupération du code source depuis GitHub
        stage("Checkout") {
            steps {
                git branch: 'main', url: 'https://github.com/massire1/testCICD.git'
            }
        }
        // Étape 2 : Exécution des tests
        stage("Test") {
            steps {
                echo "Tests en cours"
            }
        }
        // Étape 3 : Création de l'image Docker
        stage("Build Docker Image") {
            steps {
                script {
                    sh "docker build -t $DOCKER_IMAGE ./backend"
                }
            }
        }
        // Étape 4 : Publication de l'image sur Docker Hub
        stage("Push image to Docker Hub") {
            steps {
                script {
                    sh """
                    docker login -u ${DOCKER_CREDENTIALS_USR} -p ${DOCKER_CREDENTIALS_PSW}
                    echo 'Docker login successful'
                    docker push $DOCKER_IMAGE
                    """
                }
            }
        }
        // Étape 5 : Déploiement de l'application
        stage("Deploy") {
            steps {
                script {
                    sh """
                    docker run -d --name $DOCKER_CONTAINER -p 5001:5001 $DOCKER_IMAGE
                    """
                }
            }
        }
    }
}